.\" This -*- nroff -*- file has been generated from
.\" DocBook SGML with docbook-to-man on Debian GNU/Linux.
...\"
...\"	transcript compatibility for postscript use.
...\"
...\"	synopsis:  .P! <file.ps>
...\"
.de P!
\\&.
.fl			\" force out current output buffer
\\!%PB
\\!/showpage{}def
...\" the following is from Ken Flowers -- it prevents dictionary overflows
\\!/tempdict 200 dict def tempdict begin
.fl			\" prolog
.sy cat \\$1\" bring in postscript file
...\" the following line matches the tempdict above
\\!end % tempdict %
\\!PE
\\!.
.sp \\$2u	\" move below the image
..
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
'\" t 
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n  
.TH "DVGRAB" "1" 
.SH "NAME" 
dvgrab \(em Grab DV video and audio data via IEEE1394 links 
.SH "SYNOPSIS" 
.PP 
\fBdvgrab\fP [\fB-i, --interactive\fP]  [\fB--noavc\fP]  [\fB--autosplit\fP]  [\fB--timestamp\fP]  [\fB--card \fInum\fP\fP]  [\fB--channel \fInum\fP\fP]  [\fB--stdin\fP]  [\fB--dv1394 \fIdevice\fP\fP] [\fB--format \fIfmt\fP\fP]  [\fB--frames \fInum\fP\fP]  [\fB--size \fInum\fP\fP]  [\fB--every \fInum\fP\fP]  [\fB--duration \fItime\fP\fP]  [\fB--help\fP]  [\fB--version\fP]  [base]
.SH "DESCRIPTION" 
 
.PP 
\fBdvgrab\fP is a program that captures DV 
video and audio data from digital camcorders via an IEEE1394 link.  
(IEEE1394 is also known under the various trademarks FireWire,  
i.Link, or Lynx.) The DV data is stored in one or several files 
and can later be processed by video editing software.  
\fBdvgrab\fP can remote control the camcorder 
but it does not show the video's content on screen. 
.PP 
The \fBbase\fP argument is used to construct the 
filename to store video data in, like  
\fBbase-id.ext\fP where \fBid\fP is a  
running number starting from 001 and \fBext\fP is the  
file name extension specifying the file format used, e.g. avi. 
A different naming scheme is used whenever the  
\fB--timestamp\fP is given (see below).
If \fBbase\fP is '-' then the format is forced to raw DV and sent to
stdout. \fBdvgrab\fP will also output raw DV to stdout while capturing to
a file if stdout is piped or redirected. The default base is \fBdvgrab-\fP
if not specified.
.PP
You can use \fBdvgrab's\fP powerful file writing capabilities with other programs
that produce raw DV. Using the \fI--stdin\fP option and if \fBdvgrab\fP detects that 
it is on the receiving end of a pipe and it is not in interactive mode,
then it will try to read raw DV on stdin. 
 
.SH "OPTIONS" 
.IP "\fB-i, --interactive\fP 	" 10 
Make dvgrab interactive where single keypresses on stdin control
the camera VTR or start and stop capture. Otherwise, dvgrab runs
in session mode, where it immediately starts capture and stops as
directed or interrupted (ctrl-c).

.IP "\fB--noavc\fP 	" 10 
Disable use of AV/C VTR control. This is useful if you are capturing 
live video from a camera because in camera mode, an AV/C play command
tells the camera to start recording, perhaps over material on the current tape.
This applies to either interactive more or non-interactive because
non-interactive stills sends a play and stop to the VTR upon capture start
and stop.

.IP "\fB--autosplit\fP 	" 10 
Try to detect whenever a new recording starts, and store it 
into a separate file. This can be combined with the --frames and --size 
options, and a split occurs whenever a specified event arises.
 
.IP "" 10 
Autosplit is off by default. 
 
.IP "\fB--timestamp\fP 	" 10 
Put information on date and time of recording into file name. 
 
.IP "\fB--card \fInum\fP\fP 	" 10 
Tells \fBdvgrab\fP to receive data from IEEE1394 card  
\fInum\fP. The default behaviour is to automatically select the first card 
containing the first discovered camera.
If used in conjunction with \fB--noavc\fP, then no bus probing is performed.
If used in conjunction with \fB--guid\fP \fIhex\fP, then only the specified
bus is probed for node with guid \fIhex\fP.
If used in conjunction with \fB--dv1394\fP with no device file specified,
then \fBdvgrab\fP constructs a device file name using \fInum\fP
and the dv1394 devfs naming convention.

.IP "\fB--guid \fIhex\fP\fP 	" 10 
If you have more than one DV device, then select one using the node's
GUID specified in \fIhex\fP (hexadecimal) format. This is the format as
displayed in /proc/bus/ieee1394/devices or the new kernel 2.6 /sys
filesystem.

.IP "\fB--channel \fInum\fP\fP 	" 10 
Isochronous channel to receive data from. Defaults to 63, which is 
pretty much standard among DV camcorders these days. If you specify anything
different, no attempt is made at this time to tell the device which channel
to use. You must have some manual way to tell the transmitting device which
channel to use.
 
.IP "\fB--buffers \fInum\fP\fP 	" 10 
The number of frames to use for buffering device I/O delays. Defaults to 100. 
 
.IP "\fB--stdin\fP 	" 10 
Read the DV stream from a pipe on stdin instead of using a IEEE 1394 driver.
 
.IP "\fB--dv1394 \fI[device]\fP\fP 	" 10 
Use the dv1394 driver to capture instead of raw1394.
The \fIdevice\fP specification is optional if you follow the dv1394 devfs
naming convention, e.g. /dev/ieee1394/dv/host0/PAL/in.
If \fIdevice\fP is supplied in conjunction with \fB--noavc\fP, then no bus
probing is performed.
If \fIdevice\fP is not supplied, but \fB--card \fInum\fP\fP is,
then \fBdvgrab\fP constructs a device file name using \fInum\fP
and the dv1394 devfs naming convention. \fBdvgrab\fP can automatically
handle both NTSC and PAL using just /dev/ieee1394/dv/hostX/PAL/in!
 
.IP "\fB--format \fIdv1 | dv2 | raw | dif | qt | jpeg\fP\fP 	" 10 
Specifies the format of the output file(s).  
\fIdv1\fP and  
\fIdv2\fP both are AVI files with slightly different formats.  
\fIdv2\fP stores a separate audio track in addition to 
the DV video track, which is more compatible with other applications. 
\fIdv1\fP only stores a single, integrated DV track since the DV format
natively interleaves audio with video. Therefore, while \fIdv1\fP produces
smaller output, some applications won't grok it and require \fIdv2\fP instead.
\fBdvgrab\fP is capable of creating extremely large AVI files--well over 2 or
4 GB--however, compatibility with other tools starts to decrease over 
the 1 GB size.
 
.IP "" 10 
\fIraw\fP stores the data unmodified and have the .dv extension. These files
are read by a number of GNU/Linux tools as well as Apple Quicktime.
 
.IP "" 10 
\fIdif\fP is a variation of raw DV that names files with a .dif extension
so they can be more immediately loaded into MainConcept MainActor5.
 
.IP "" 10 
\fIqt\fP is Quicktime, but requires that dvgrab be compiled with libquicktime.

.IP "" 10 
\fIjpg\fP is for a sequence of JPEG image files if dvgrab was compiled with
jpeglib.

.IP "" 10 
Defaults to \fIdv2\fP

.IP "\fB--opendml\fP 	" 10
If using \fB--format dv2\fP, create an OpenDML-compliant type 2 DV AVI. This
is required to support dv2 files >1GB. dv1 always supports files >1GB.

.IP "\fB--jpeg-quality \fInum\fP\fP 	" 10 
If using \fB--format jpeg\fP, set the JPEG quality level from 0 (worst) to 
100 (best).

.IP "\fB--jpeg-deinterlace\fP 	" 10 
If using \fB--format jpeg\fP, deinterlace the output by doubling the lines
of the upper field. This is a cheap form of deinterlace that results in an
effective 50% loss in resolution.

.IP "\fB--jpeg-width \fInum\fP\fP 	" 10 
If using \fB--format jpeg\fP, scale the output of the width to \fInum\fP
(1 - 2048).

.IP "\fB--jpeg-height \fInum\fP\fP 	" 10 
If using \fB--format jpeg\fP, scale the output of the height to \fInum\fP
(1 - 2048).

.IP "" 10 
The JPEG scaling width and height must be both either less than or greater
than the normal frame size. For example, the scaled size of 700 wide by
525 high yields a nice 4:3 aspect image with square pixels, but it is illegal
for NTSC because 700 is less than the normal width of 720 while the height is
greater than the normal height of 480.

.IP "" 10 
Since DV uses non-square pixels, it is nice to be able to scale to an image 
based upon a 4:3 aspect ratio using square pixels. For NTSC, example sizes are 
800x600, 640x480, and 320x240. For PAL, example square pixel sizes are 384x270
and 768x540.

.IP "\fB--frames \fInum\fP\fP 	" 10 
This option tells \fBdvgrab\fP to store 
at most \fInum\fP frames per file before splitting to a new file,
where \fInum\fP = 0 means ulimited.
The corresponding time depends on the video system used. 
PAL shows 25, NTSC about 30 frames per second. 
 
.IP "\fB--size \fInum\fP\fP 	" 10 
This option tells \fBdvgrab\fP to store at most
\fInum\fP megabytes per file, where \fInum\fP = 0 means unlimited file size
for large files. The default size limit is 1024 MB.

.IP "\fB--every \fIn\fP\fP 	" 10 
This option tells \fBdvgrab\fP to 
write every \fIn\fP'th frame only (default all frames). 
 
.IP "\fB--duration \fItime\fP\fP 	" 10 
Set the maximum capture duration across all file splits for a single
capture session (multiple sessions are possible in interactive mode).
The \fItime\fP value is expressed in SMIL2 MediaClipping Time format.
See http://w3.org/AudioVideo/ for the specification.
.IP "" 10 
Briefly, the formats are:
.IP "" 10 
XXX[.Y]h, XXX[.Y]min, XXX[.Y][s], XXXms,
.IP "" 10 
[[HH:]MM:]SS[.ms], or smpte=HH[:MM[:SS[:FF]]].

.IP "\fB--help\fP         " 10 
Show summary of options. 
 
.IP "\fB--version\fP         " 10 
Show version of program. 

.SH "EXAMPLES" 

.IP "\fBdvgrab foo-\fP 	  " 10 
Captures video data from the default IEEE1394 source 
and stores it to files \fBfoo-001.avi\fP, 
\fBfoo-002.avi\fP, etc. 
 
.IP "\fBdvgrab --frames 25 foo-\fP 	  " 10 
Assuming a PAL video source, this command records one 
second's worth of video data. 
 
.IP "\fBdvgrab --autosplit --frames 750 --timestamp foo-\fP 	  " 10 
Records video data from the default IEEE1394 source, cuts 
it into chunks of 30 seconds (assuming PAL) and names the 
resulting files according to date and time info in the 
videostream. 
 
.SH "AUTHOR" 
.PP 
This manual page was written by Daniel Kobras kobras@debian.org for 
the \fBDebian GNU/Linux\fP system (but may be used by others). It has
been updated by Dan Dennedy. See the website http://kino.schirmacher.de/
for more information and support.
 
.PP 
Permission is granted to copy, distribute and/or modify 
this document under the terms of the GNU Free 
Documentation License, Version 1.1 or any later version 
published by the Free Software Foundation; with no Invariant 
Sections, no Front-Cover Texts and no Back-Cover Texts.  A copy 
of the license can be found under 
\fB/usr/share/common-licenses/FDL\fP. 
...\" created by instant / docbook-to-man, Wed 13 Dec 2000, 17:30
