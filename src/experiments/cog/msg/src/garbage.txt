



#if 0

	// TEST: improve fixation.
	
	float theta, phi;
	m_fixation_helper.ComputeCorrection 
		(m_pos, m_positionarm, m_store_image_target.xl, m_store_image_target.yl, theta, phi);

	// send msg.
	memset (&m_hmsg, 0, sizeof(HeadMessage));
	m_hmsg.type = HeadMsgMoveToOrientationRight;
	m_hmsg.j1 = theta;
	m_hmsg.j2 = phi;
	m_hmsg.j3 = 0.0; // no timeout (in seconds).
	m_hmsg.j7 = 0.0; //8 * degToRad;	// don't control vergence.
	caller->m_ohead.Content() = m_hmsg;
	caller->m_ohead.Write (1);

	YARPTime::DelayInSeconds (1.5);

	// need to stop the head again.
	memset (&m_hmsg, 0, sizeof(HeadMessage));
	m_hmsg.type = HeadMsgStopAll;
	caller->m_ohead.Content() = m_hmsg;
	caller->m_ohead.Write (1);

	// END TEST: improve fixation.



	// move the arm again...
	memset (&m_amsg, 0, sizeof(ArmMessage));
	m_amsg.type = ArmMsgMoveToOld;
	for (i = 3; i <= 8; i++)
		m_amsg.j[i] = m_reaching.GetSideposition()(i-2);

	caller->m_oarm.Content() = m_amsg;
	caller->m_oarm.Write (1);

#endif


#if 0 /* test movement of the torso */

	//
	//
	// Ask for torso position to get a good poking.

	float theta, phi;
	m_fixation_helper.ComputeDirection (m_pos, m_positionarm, theta, phi);
	caller->m_msg_port.SendMsg (YBC_SHLC_ASK_TORSO, theta, phi);

	printf ("sent a request for torso position\n");

	int ret = caller->m_ans_port.GetMsgBlock (YBC_SHLC_REPLY_TORSO, m_torso, m_action_no);

	// add noise to force exploration.
	int r = YARPRandom::Rand (-1500,1500);
	printf ("exploration : %d\n", r);
	m_torso += r;

	if (ret < 0)
		printf ("answer timeout\n");

	printf ("answer: %f %d\n", m_torso, m_action_no);

	if (m_action_no >= 0)
	{
		printf ("got a reply from higher level, moving torso\n");

		// head moves, fixation should be maintained.
		memset (&m_hmsg, 0, sizeof(HeadMessage));
		m_hmsg.type = 0;
		caller->m_ohead.Content() = m_hmsg;
		caller->m_ohead.Write (1);


		memset (&m_amsg, 0, sizeof(ArmMessage));
		m_amsg.type = ArmMsgTorsoStart;
		caller->m_oarm.Content() = m_amsg;
		caller->m_oarm.Write (1);

		memset (&m_amsg, 0, sizeof(ArmMessage));
		m_amsg.type = ArmMsgTorsoPosition;
		m_amsg.j[2] = double(m_torso);
		caller->m_oarm.Content() = m_amsg;
		caller->m_oarm.Write (1);

		YARPTime::DelayInSeconds (3.0);


		// stop the head before reaching.
		memset (&m_hmsg, 0, sizeof(HeadMessage));
		m_hmsg.type = HeadMsgStopAll;
		caller->m_ohead.Content() = m_hmsg;
		caller->m_ohead.Write (1);

	}
	else
		printf ("didn't get a valid action from shlc\n");
#endif
