#! /usr/bin/perl
#
#	--file <config_file>
#		where <config_file> is the filename of the context config file.
#

use Getopt::Long;
use File::Copy;

print "Entering configure process of YARP environment...\n";

chomp ($tmp = `ver`);
if (index ($tmp, "Windows") < 0)
{
	print "This is a Windows 2000/XP specific script\n";
	print "Perhaps this procedure can be simply extended to\n"; 
	print "other OSes but for now, this is all experimental...\n";
	
	die "This script is specific to Windows 2000/XP\n";
}

$yarp_root = $ENV{'YARP_ROOT'};
if (!defined($yarp_root))
{
	die "YARP_ROOT environment variable must be defined!\nto point to the path of the yarp source distribution\n";
}

print "Ready to start...\n";

my $config_file = "$yarp_root/conf/context.conf";
my %options = ();

GetOptions ('file=s' => \$config_file );

if (-e $config_file)
{
	copy ($config_file, "$config_file.old");

	open CONFIG, $config_file or die "Can't open config file $!";

	my $contextual;
	while (<CONFIG>)
	{
		chomp;
		if (/^\[(\w+)\]$/)
		{
	#		print "Matched: $`<$&>$'\n";
			$contextual = $1;
		}
		elsif (/^([A-Z0-9_]+)= ?/)
		{
			$options{$contextual."<-".$1} = $';
		}
	}

	close CONFIG;
}

#
#
#

my $line = undef;
print "Now I'm going to ask a few questions to help the configuration\n";
print "So, let's start...\n";
print "For pathnames you can use (type) the pre-defined value \$YARP_ROOT\n";
print " that I've verified as: \"$yarp_root\"\n\n";
print "Please, use always the forward slash as a separator!\n";

print "I determined already that you're running on Windows\n";

$options{"Architecture<-OS"} = "winnt";
print "Just to make sure, what's your OS [$options{\"Architecture<-OS\"}]? ";
chomp($line = <STDIN>);
$options{"Architecture<-OS"} = $line if (defined($line) && $line ne '');

print "Where has ACE been unpacked [$options{\"Compile_OS<-ACE_PATH\"}]? "; 
chomp($line = <STDIN>);
$options{"Compile_OS<-ACE_PATH"} = $line if (defined($line) && $line ne '');

$options{"Compile_OS<-ACE_Rebuild"} = "NO";
print "Do you want to rebuild ACE, i.e. clean before building [$options{\"Compile_OS<-ACE_Rebuild\"}]? ";
chomp($line = <STDIN>);
$options{"Compile_OS<-ACE_Rebuild"} = $line if (defined($line) && $line ne '');

print "We're done for now, the context file is being created: \"$config_file\"\n";

#
# re-creating the config file.
# 
open CONFIG, "> $config_file";
select CONFIG;

print "//\n";
print "// This is an example configuration file.\n";
print "// - projects and include files are created relying on this options.\n";
print "//\n";
print "// Generated by <configure.pl>\n";
print "//\n";

my $context = '';
foreach my $key (sort keys %options)
{
	my $value = $options{$key};
	$key =~ /<-/;
	if ($context ne $`)
	{
		$context = $`;
		print "\n[$context]\n";
	}
	print "$'= $value\n";
}

select STDOUT;
close CONFIG;

print "Done!\n";