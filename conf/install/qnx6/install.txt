Configuring YARP for QNX6

$Id: install.txt,v 1.17 2003-09-08 17:19:21 beltran Exp $

This file is in: %YARP_ROOT%\conf\install\qnx6

---INTRODUCTION---

The network consists of two types of QNX machines. There is a machine that acts as 
"server" and the rest are "nodes".
The server has the more complex installation and will run commands and programs in the nodes.
(for the future NFS support will be added)

---SERVER INSTALLATION---

Currently QNX 6.2.0 Profesional Edition is the version we are using. Its installation is straight; some extra 
modules should be added from the third party CD if ones wants support like: samba or ssh.

The network cards supported by qnx are the Matrox's and the 3Com's. 

The propietary QNX network (QNET) should be installed, both in the server and in the nodes. The command to run is:
mount -Tio-net npm-qnet.so
This adds the QNET to the network qnx manager called io-net. It is better to create a file called "rc.local" inside
/etc/rc.d to run this command.

The tcp-ip, i think, is started automatically once configured in the GUI interface. 
It is important to notice that YARP needs to configure manually the next files:

-/etc/hosts-

#
# Host Database
#
127.1           localhost.localdomain localhost
::1             localhost.localdomain localhost
130.251.43.15   YOURMACHINE.YOURDOMAIN      YOURMACHINE 

-/etc/resolv.conf-

#domain Berkeley.Edu
#nameserver 128.32.0.4
#nameserver 128.32.0.10
domain YOURDOMAINNAME
nameserver NAMESERVER_IPADDR
lookup NAMESERVER_IPADDR


It is unknown why Qnx needs these files to be configured manually but if it is not done this way YARP fails using some 
low level functions (like...)

Install the compiler: unfortunately, the qnx compiler is a modified version of gcc that doesn't work correctly for
our pourposes (does not compile ACE). To be able to compile ACE is necessary to install the real gcc (add the version 
the documentation for the installation).

---YARP INSTALLATION---

YARP proper install/configuration

REQUIRES:
	- ACE 5.3 from: http://www.cs.wustl.edu/~schmidt/ACE.html
	

0) licensing:
	- the template of the academic free licence can be found in
		%YARP_ROOT%\conf\licence.template

1) before compiling:
	- Check out from cvs on sourceforge: www.sourceforge.net
	- unzip ACE on top of ACE_wrappers under %YARP_ROOT%\src\libraries\
		NOTE for UNZIP: and UNCHECK the option to overwrite the files (this leaves
		the modified files from the repository inplace)
	i.e.:tar xvfzk ACE-5.3.tar.gz
	  *** check out the correct ACE files from the repository ***
	- use the %YARP_ROOT%/conf/YARPConfigTemplate.h and include the correct 
		config file (found in %YARP_ROOT%/include/conf)
		Copy the template into: %YARP_ROOT%/include/conf/YARPConfig.h

1.1) make sure:
	- you RUN something like DOS2UNIX on cpp, h, inl, i, and Makefile's.
	- it won't compile otherwise.

2) Compile:
	ACE, this copies also the .h, .i, and .cpp files into %YARP_ROOT%\include
		- use "make" from: %YARP_ROOT%\src\libraries\ACE_wrappers\ace (this can take several minutes)
		- do "make yarpize" from the same place (it copies all necesary things..etc)

	os_services
		- use "make" from: %YARP_ROOT%\src\libraries\os_services\
		- use "make install"
		
	hardware
		-use "make" from %YARP_ROOT%/src/hardware/src
		(this makes also the installation)
				 
	images
		* Install fake ipl
			- by running %YARP_ROOT/src/libraries/ipl/install_fake_ipl script.
		* Install log polar
			- use "make" in %YARP_ROOT%/src/libraries/logpolar
			- use "make install" in the same place
			- use "make" in  %YARP_ROOT%/src/libraries/logpolar/BuildTablesSmall
			- run %YARP_ROOT%/src/libraries/logpolar/BuildTablesSmall/BuildTablesSmall /home/cbeltran/YARP/conf/
		* Install images
			- use "make" in %YARP_ROOT%/src/libraries/images
			- use "make install" in the same place

	utils
		*for the momment
			-use "make install" in %YARP_ROOT/src/libraries/utils
			(an error appears because the library is not present but this is ok for the moment)
			
	motorcontrol
			- use "make" in %YARP_ROOT/src/libraries/motorcontrol	
			- use "make install" in %YARP_ROOT/src/libraries/motorcontrol
	===

	//utils
	//	- dsw in: %YARP_ROOT%\src\libraries\utils\utils.dsw

	

3) What to include/link for building an application is YARP.
	TO BE COMPLETED, templates?

4) Stuff under %YARP_ROOT%/conf
	- namer.conf.template: to be compied into namer.conf
		it contains the name and port of the machine running the yarp name
		service
	- ROBOTNAME directories, one for each robot we ever used with yarp (new version)


---NODE INSTALLATION---

A node is only adding computational power. It neither needs to compile YARP nor to install a complete system.
A floppy disk can be used to start the computer. This disk can be created from the server with a particular 
procedure where a kernel images is built an inserted in the disk. (add here procedure to create a boot disk).

---NOTES IN COMPILING-RUNNING FRAMEGRABBER STUFF---

	Nameserver
	%YARP_ROOT/src/maintenance/services/nameserver/YARPNameService/make
								       make install

	Porter
	%YARP_ROOT/src/maintenance/services/porter/porter/make
							  make install

	Framegrabber
	%YARP_ROOT/src/hardware/daemons/framegrab/make
						  make install

	Viewer
	%YARP_ROOT/src/applications/viewers/camview/qnx6/make
							 make install

	NOTE: It is important the communications mode used to compile

	i.e.: How to use all this
	./YARPNameService
	./framegrabber -l
        ./camview -l -w 256	
	./porter /framegrab/o:img /images:i
