#
# Template to be included by all YARP makefiles.
# $Id: Makefile.template,v 2.0 2005-11-10 17:50:21 gmetta Exp $
#

QNX_VER = 6.1.0 6.2.0 6.2.1

ifeq ($(shell uname),QNX)
  
  ifneq (,$(findstring $(shell uname -r),$(QNX_VER)))
	nto_version := $(shell uname -a | awk '{ gsub("\\.","", $$3 ); print $$3;}')

	SYSDIR = qnx6
	EXTRA_OPTS = $(YARP_DEBUG) -fexceptions -pipe -Wpointer-arith -Wno-uninitialized 
	CC = g++
	CC1 = gcc
	CDEFS = $(EXTRA_OPTS) -D__QNX__ -D__QNX6__ -DYARP_OS_CONFIG=QNX6 -I/usr/include/g++-3/ -I$(YARP_ROOT)/include/
	# got this from ACE compile.	
	CDEFS += -DACE_NTO_VERS=$(nto_version)
	CDEFS += -DACE_HAS_EXCEPTIONS -D__ACE_INLINE__ -DACE_HAS_ACE_TOKEN -DACE_HAS_ACE_SVCCONF -DACE_AS_STATIC_LIBS 
	CFAST = -O3
  	LIBADD = -lsocket

  endif

else
  ifeq ($(shell uname),Linux)
 
	SYSDIR = linux
	EXTRA_OPTS = $(YARP_DEBUG) -fexceptions -pipe -Wpointer-arith -Wno-uninitialized 
	CC = g++
	CC1 = gcc
	CDEFS = $(EXTRA_OPTS) -D__LINUX__ -DYARP_OS_CONFIG=LINUX -I/usr/include/g++/ -I$(YARP_ROOT)/include/
	# got this from ACE compile.	
	CDEFS += -DACE_NDEBUG -DACE_USE_RCSID=0
	CDEFS += -DACE_HAS_EXCEPTIONS -D__ACE_INLINE__ -DACE_HAS_ACE_TOKEN -DACE_HAS_ACE_SVCCONF -DACE_AS_STATIC_LIBS 
	CFAST = -O3
 	LIBADD = -lpthread -ldl
 
  else
    ifeq ($(shell uname),Darwin)

        SYSDIR = darwin
        EXTRA_OPTS = $(YARP_DEBUG)  -pipe -Wpointer-arith -Wno-long-double -mcpu=G3 -mtune=G4 
        CC = g++
        CC1 = gcc
        CDEFS = $(EXTRA_OPTS) -D__DARWIN__ -DYARP_OS_CONFIG=DARWIN -I/usr/include/gcc/darwin/default/c++/ -I$(YARP_ROOT)/include/
        # got this from ACE compile.
        CDEFS += -DACE_NDEBUG -DACE_USE_RCSID=0
        CDEFS += -DACE_HAS_EXCEPTIONS -D__ACE_INLINE__ -DACE_HAS_ACE_TOKEN -DACE_HAS_ACE_SVCCONF -DACE_AS_STATIC_LIBS
        CFAST = -O2
        LIBADD = -lpthread -ldl
	ARFLAGS = -sr
    endif
  endif
endif

OS=$(SYSDIR)

ifeq ($(OS),qnx)
  CP=cp -f
else
  CP=cp
endif

YARPSYSINC = -I$(YARP_ROOT)/include/$(SYSDIR)

# this only works on certain shells (or at least it seems to fail on qnx sh).
ifndef MYCODELIB
  MYCODELIB = $(notdir $(patsubst %/src, %, $(PWD)))
endif
